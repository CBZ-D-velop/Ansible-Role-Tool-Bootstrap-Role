---
dependency:
  name: "galaxy"
  options:
    ignore-certs: true

driver:
  name: "docker"

platforms:
{% for n in range(scenario.hosts)  %}
  - name: "molecule-{{ scenario.target_group }}-instance-{{ loop.index }}-{{ bootstrap_role__meta_role_name.replace('_', '-') }}"
    image: "{{ scenario.docker_image }}"
    hostname: "molecule-{{ scenario.target_group }}-instance-{{ loop.index }}-{{ bootstrap_role__meta_role_name.replace('_', '-') }}"
    #published_ports:
    #  - "0.0.0.0:8181:8181/tcp"
    privileged: true
    pre_build_image: true
    command: "/sbin/init"
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
    tmpfs:
      - "/run"
      - "/tmp"
    cgroupns_mode: "host"
    cgroup_manager: "cgroupfs"
    storage_driver: "overlay2"
    networks:
      - name: "molecule-{{ scenario.target_group }}-{{ bootstrap_role__meta_role_name.replace('_', '-') }}"

{% endfor %}

provisioner:
  name: "ansible"
  inventory:
    links:
      hosts: "../../tests/inventory/hosts.yml"
      group_vars: "../../tests/inventory/group_vars/"
      host_vars: "../../tests/inventory/host_vars/"
  options:
{% if scenario.name == "default" %}
    extra-vars: "@./tests/tower/tower.yml"
{% else %}
    extra-vars: "@./../../tests/tower/tower.yml"
{% endif %}
  log: ${MOLECULE_ANSIBLE_LOG:-true}
  env:
    ANSIBLE_CONFIG: "../../.ansible.cfg"
    ANSIBLE_FORCE_COLOR: "true"
    # disable nologs
    MOLECULE_NOLOG: 0
    # disable destroy
    MOLECULE_DESTROY: "never"
    # debug mode (same as --debug) -- very verbose
    MOLECULE_DEBUG: 1
    # change ansible own verbosity
    ANSIBLE_VERBOSITY: 1

verifier:
  name: "ansible"

scenario:
  name: "{{ scenario.name }}"
  test_sequence:
{% for test in bootstrap_role__molecule_test_sequence %}
    - "{{ test }}"
{% endfor %}
