---
- name: "Check if folder for the role {{ bootstrap_role_meta_role_name }} exist"
  register: folder_check
  ansible.builtin.stat:
    path: "{{ bootstrap_role_path }}"

- name: "Boostrap the role {{ bootstrap_role_meta_role_name }}"
  when: not folder_check.stat.exists
  block:
    - name: "Create folders"
      block:
        - name: "Create root/main directory"
          ansible.builtin.file:
            path: "{{ bootstrap_role_path }}"
            state: directory
            owner: "{{ bootstrap_role_user }}"
            group: "{{ bootstrap_role_user }}"
            mode: 0700

        - name: "Create all sub directories"
          loop: "{{ bootstrap_role_folders }}"
          loop_control:
            loop_var: folder
          ansible.builtin.file:
            path: "{{ bootstrap_role_path }}/{{ folder }}"
            state: directory
            recurse: yes
            owner: "{{ bootstrap_role_user }}"
            group: "{{ bootstrap_role_user }}"
            mode: 0700

    - name: "Import files"
      block:
        - name: "Import all README.md"
          loop: "{{ bootstrap_role_folders }}"
          loop_control:
            loop_var: folder
          ansible.builtin.copy:
            src: "files/README.md"
            dest: "{{ bootstrap_role_path }}/{{ folder }}/README.md"
            owner: "{{ bootstrap_role_user }}"
            group: "{{ bootstrap_role_user }}"
            mode: 0700

        - name: "Import all configuration files"
          loop: "{{ bootstrap_root_files }}"
          loop_control:
            loop_var: file
          ansible.builtin.copy:
            src: "files/{{ file }}"
            dest: "{{ bootstrap_role_path }}/{{ file }}"
            owner: "{{ bootstrap_role_user }}"
            group: "{{ bootstrap_role_user }}"
            mode: 0700

        - name: "Import all main.yml files"
          loop: "{{ bootstrap_role_folders }}"
          loop_control:
            loop_var: folder
          vars:
            excluded_folders:
              - "molecule"
              - "molecule/default"
              - "molecule/cicd-debian-11"
              - "templates"
              - "tests"
              - "tests/tower"
              - "tests/certs"
              - "tests/inventory"
              - "tests/inventory/group_vars"
              - "tests/inventory/host_vars"
          when: folder not in excluded_folders
          ansible.builtin.copy:
            src: "files/main.yml"
            dest: "{{ bootstrap_role_path }}/{{ folder }}/main.yml"
            owner: "{{ bootstrap_role_user }}"
            group: "{{ bootstrap_role_user }}"
            mode: 0700

    - name: "Template base elements for role {{ bootstrap_role_meta_role_name }}"
      loop:
        - { src: "templates/meta_main.yml.j2", dest: "{{ bootstrap_role_path }}/meta/main.yml" }
        - { src: "templates/README.md.j2", dest: "{{ bootstrap_role_path }}/README.md" }
        - { src: "templates/LICENCE.j2", dest: "{{ bootstrap_role_path }}/LICENCE" }
      loop_control:
        loop_var: file
      ansible.builtin.template:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        owner: "{{ bootstrap_role_user }}"
        group: "{{ bootstrap_role_user }}"
        mode: 0700

    - name: "Template elements for inventory and testing for role {{ bootstrap_role_meta_role_name }}"
      loop:
        - { src: "templates/hosts.yml.j2", dest: "{{ bootstrap_role_path }}/tests/inventory/hosts.yml" }
        - { src: "templates/host_file.yml.j2", dest: "{{ bootstrap_role_path }}/tests/inventory/host_vars/molecule-local-instance-1-{{ bootstrap_role_meta_role_name.replace('_', '-') }}.yml" }
      loop_control:
        loop_var: file
      ansible.builtin.template:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        owner: "{{ bootstrap_role_user }}"
        group: "{{ bootstrap_role_user }}"
        mode: 0700

    - name: "Copy elements for inventory and testing for role {{ bootstrap_role_meta_role_name }}"
      loop:
        - { src: "files/local.yml", dest: "{{ bootstrap_role_path }}/tests/inventory/group_vars/local.yml" }
        - { src: "files/tower.yml", dest: "{{ bootstrap_role_path }}/tests/tower/tower.yml" }
        - { src: "files/main-certs.yml", dest: "{{ bootstrap_role_path }}/tests/certs/main.yml" }
      loop_control:
        loop_var: file
      ansible.builtin.copy:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        owner: "{{ bootstrap_role_user }}"
        group: "{{ bootstrap_role_user }}"
        mode: 0700

    - name: "Template Molecule files for role {{ bootstrap_role_meta_role_name }}"
      loop:
        - { src: "templates/molecule_default.yml.j2", dest: "{{ bootstrap_role_path }}/molecule/default/molecule.yml" }
        - { src: "templates/molecule_cicd-debian-11.yml.j2", dest: "{{ bootstrap_role_path }}/molecule/cicd-debian-11/molecule.yml" }
        - { src: "templates/molecule_converge.yml.j2", dest: "{{ bootstrap_role_path }}/molecule/default/converge.yml" }
        - { src: "templates/molecule_converge.yml.j2", dest: "{{ bootstrap_role_path }}/molecule/cicd-debian-11/converge.yml" }
      loop_control:
        loop_var: file
      ansible.builtin.template:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        owner: "{{ bootstrap_role_user }}"
        group: "{{ bootstrap_role_user }}"
        mode: 0700

    - name: "Import Molecule files for role {{ bootstrap_role_meta_role_name }}"
      loop:
        - { src: "files/prepare.yml", dest: "{{ bootstrap_role_path }}/molecule/default/prepare.yml" }
        - { src: "files/prepare.yml", dest: "{{ bootstrap_role_path }}/molecule/cicd-debian-11/prepare.yml" }
        - { src: "files/verify.yml", dest: "{{ bootstrap_role_path }}/molecule/default/verify.yml" }
        - { src: "files/verify.yml", dest: "{{ bootstrap_role_path }}/molecule/cicd-debian-11/verify.yml" }
        - { src: "files/requirements.yml", dest: "{{ bootstrap_role_path }}/molecule/cicd-debian-11/requirements.yml" }
        - { src: "files/requirements.yml", dest: "{{ bootstrap_role_path }}/molecule/default/requirements.yml" }
      loop_control:
        loop_var: file
      ansible.builtin.copy:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        owner: "{{ bootstrap_role_user }}"
        group: "{{ bootstrap_role_user }}"
        mode: 0700
